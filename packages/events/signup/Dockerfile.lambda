# First stage: Build the Go binary
FROM golang:1.22 AS builder

# Set up environment variables
ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64 \
    GOPROXY=https://proxy.golang.org,direct

WORKDIR /app

# Copy dependency files first to leverage Docker cache
COPY go.mod go.sum ./
RUN go mod download

# Copy the application source code
COPY . .

# Build the Go binary with optimizations
RUN go build -ldflags="-s -w" -o main .

# Second stage: Create a minimal runtime environment with Amazon Linux 2
FROM amazonlinux:2

# Install required runtime libraries (optional)
RUN yum update -y && yum install -y tar gzip

WORKDIR /app

# Copy the compiled binary from the builder stage
COPY --from=builder /app/main /app/server

# Ensure the binary is executable
RUN chmod +x /app/server

# Command to copy the built binary to the output directory
CMD ["cp", "/app/server", "/out/server"]
