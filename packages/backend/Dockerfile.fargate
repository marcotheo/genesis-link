# Use the official Golang image as the base image
FROM golang:1.22.5-alpine AS builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum /app/

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Create the app directory
RUN mkdir -p /app/cmd/service

# Copy the source from the current directory to the Working Directory inside the container
COPY cmd/service /app/cmd/service
COPY pkg /app/pkg

# Build the Go app
WORKDIR /app/cmd/service
RUN go build -o /app/main .

# Start a new stage from scratch
FROM alpine:latest

# Set the Current Working Directory inside the container
WORKDIR /root/

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/main .

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD ["./main"]